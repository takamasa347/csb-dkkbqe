{"version":3,"sources":["src/index.js"],"names":["require","onClickAdd","inputText","document","getElementById","value","createIncompleteList","deleteFromIncompleteList","target","removeChild","text","li","createElement","className","p","innerText","appendChild","completeButton","addEventListener","parentNode","addTarget","firstElementChild","textContent","backButton","deleteTarget","firstChild","deleteButton"],"mappings":";;;AAyFgD,aAzFhDA,QAAA,gBAEA,IAAMC,EAAa,WAEjB,IAAMC,EAAYC,SAASC,eAAe,YAAYC,MACtDF,SAASC,eAAe,YAAYC,MAAQ,GAE5CC,EAAqBJ,IAIjBK,EAA2B,SAACC,GAChCL,SAASC,eAAe,mBAAmBK,YAAYD,IAInDF,EAAuB,SAAvBA,EAAwBI,GAE5B,IAAMC,EAAKR,SAASS,cAAc,MAClCD,EAAGE,UAAY,WAGf,IAAMC,EAAIX,SAASS,cAAc,KACjCE,EAAED,UAAY,gBACdC,EAAEC,UAAYL,EAGdC,EAAGK,YAAYF,GAGf,IAAMG,EAAiBd,SAASS,cAAc,UAC9CK,EAAeF,UAAY,KAC3BE,EAAeC,iBAAiB,QAAS,WAEvCX,EAAyBU,EAAeE,YAGxC,IAAMC,EAAYH,EAAeE,WAG3BT,EAAOU,EAAUC,kBAAkBN,UAGzCK,EAAUE,YAAc,KAGxB,IAAMR,EAAIX,SAASS,cAAc,KACjCE,EAAEC,UAAYL,EAGd,IAAMa,EAAapB,SAASS,cAAc,UAC1CW,EAAWR,UAAY,KACvBQ,EAAWL,iBAAiB,QAAS,WAEnC,IAAMM,EAAeD,EAAWJ,WAChChB,SAASC,eAAe,iBAAiBK,YAAYe,GAGrD,IAAMd,EAAOa,EAAWJ,WAAWM,WAAWV,UAC9CT,EAAqBI,KAIvBU,EAAUJ,YAAYF,GACtBM,EAAUJ,YAAYO,GAGtBpB,SAASC,eAAe,iBAAiBY,YAAYI,KAIvD,IAAMM,EAAevB,SAASS,cAAc,UAC5Cc,EAAaX,UAAY,KACzBW,EAAaR,iBAAiB,QAAS,WAErCX,EAAyBmB,EAAaP,cAIxCR,EAAGK,YAAYF,GACfH,EAAGK,YAAYC,GACfN,EAAGK,YAAYU,GAGfvB,SAASC,eAAe,mBAAmBY,YAAYL,IAGzDR,SACGC,eAAe,cACfc,iBAAiB,QAAS,WAAA,OAAMjB","file":"src.737fa6fd.js","sourceRoot":"..","sourcesContent":["import \"./styles.css\";\n\nconst onClickAdd = () => {\n  // テキストボックスの値を取得し初期化する\n  const inputText = document.getElementById(\"add-text\").value;\n  document.getElementById(\"add-text\").value = \"\";\n\n  createIncompleteList(inputText);\n};\n\n// 未完了リストから指定の要素をd削除\nconst deleteFromIncompleteList = (target) => {\n  document.getElementById(\"incomplete-list\").removeChild(target);\n};\n\n// 未完了リストに追加する関数\nconst createIncompleteList = (text) => {\n  // li生成\n  const li = document.createElement(\"li\");\n  li.className = \"list-low\";\n\n  // p生成\n  const p = document.createElement(\"p\");\n  p.className = \"list-low-text\";\n  p.innerText = text;\n\n  // liタブの小要素に各要素を設定\n  li.appendChild(p);\n\n  // 完了button生成\n  const completeButton = document.createElement(\"button\");\n  completeButton.innerText = \"完了\";\n  completeButton.addEventListener(\"click\", () => {\n    // 押された完了ボタンの親タグ　(li)を未完了リストから削除\n    deleteFromIncompleteList(completeButton.parentNode);\n\n    // 完了リストに追加する要素\n    const addTarget = completeButton.parentNode;\n\n    // TODO内容テキストを取得\n    const text = addTarget.firstElementChild.innerText;\n\n    // li以下を初期化\n    addTarget.textContent = null;\n\n    // pタグ生成\n    const p = document.createElement(\"p\");\n    p.innerText = text;\n\n    // buttonタグ生成\n    const backButton = document.createElement(\"button\");\n    backButton.innerText = \"戻す\";\n    backButton.addEventListener(\"click\", () => {\n      // 押された戻すボタンの親タグ(li)を完了リストから削除\n      const deleteTarget = backButton.parentNode;\n      document.getElementById(\"complete-list\").removeChild(deleteTarget);\n\n      // テキスト取得\n      const text = backButton.parentNode.firstChild.innerText;\n      createIncompleteList(text);\n    });\n\n    // pタグの小要素に各要素を設定\n    addTarget.appendChild(p);\n    addTarget.appendChild(backButton);\n\n    // 完了リストに追加\n    document.getElementById(\"complete-list\").appendChild(addTarget);\n  });\n\n  // 削除button生成\n  const deleteButton = document.createElement(\"button\");\n  deleteButton.innerText = \"削除\";\n  deleteButton.addEventListener(\"click\", () => {\n    // 押された削除ボタンの親タグ(li)を未完了リストから削除\n    deleteFromIncompleteList(deleteButton.parentNode);\n  });\n\n  // liタグの子要素に各要素を設定\n  li.appendChild(p);\n  li.appendChild(completeButton);\n  li.appendChild(deleteButton);\n\n  // 未完了リストに追加\n  document.getElementById(\"incomplete-list\").appendChild(li);\n};\n\ndocument\n  .getElementById(\"add-button\")\n  .addEventListener(\"click\", () => onClickAdd());\n"]}